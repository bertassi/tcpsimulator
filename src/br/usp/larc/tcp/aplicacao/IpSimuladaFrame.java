package br.usp.larc.tcp.aplicacao;

import br.usp.larc.tcp.excecoes.*;
import br.usp.larc.tcp.ipsimulada.*;
import javax.swing.*;

/**
 * Classe IpSimuladaFrame que representa a Interface Gráfica com Usuario (GUI)
 * para testar o acesso a uma camada IPSimulada. Você deve editar os métodos
 * ActionPerformed que tratam os eventos dos componentes gráficos para acessar
 * os métodos da classe IpSimulada.
 *
 * OBS: Essa classe foi aprimorada em relação à original feita entre os anos de
 * 2003 e 2006.
 *
 * @author bertassi
 */
public class IpSimuladaFrame extends javax.swing.JFrame
{

    /**
     * Atributo para conexão
     */
    private IpSimulada camadaIPSimulada;

    /**
     * Cria um novo JFrame.
     */
    public IpSimuladaFrame ()
    {
        this.setCamadaIPSimulada();
        this.initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * Inicializa a variavel camadaIPSimulada.
     */
    private void setCamadaIPSimulada ()
    {
        try
        {
            this.camadaIPSimulada = new IpSimulada();
        }
        catch (Exception ex)
        {
            System.out.println("Erro ao criar IPSimulada.");
            JOptionPane.showMessageDialog(null, "Erro ao criar ");
        }
    }

    /**
     * Retorna o valor da a variavel camadaIPSimulada.
     *
     * @return the camadaIPSimulada
     */
    private IpSimulada getCamadaIPSimulada ()
    {
        return camadaIPSimulada;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jLabelNomeCanal = new javax.swing.JLabel();
        jTextFieldNomeCanal = new javax.swing.JTextField();
        jButtonInicializaCanal = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabelCanalDestino = new javax.swing.JLabel();
        jTextFieldCanalDestino = new javax.swing.JTextField();
        jLabelIpVirtual = new javax.swing.JLabel();
        jTextFieldIPVirtual = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabelMsgEnviar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaMsgEnviar = new javax.swing.JTextArea();
        jButtonEnviarMensagem = new javax.swing.JButton();
        jLabelMsgReceber = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaMsgReceber = new javax.swing.JTextArea();
        jButtonReceberMensagem = new javax.swing.JButton();
        jButtonSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IpSimuladaFrame");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Origem"));
        jPanel1.setPreferredSize(new java.awt.Dimension(380, 210));
        jPanel1.setRequestFocusEnabled(false);
        jPanel1.setVerifyInputWhenFocusTarget(false);

        jLabelNomeCanal.setText("Nome do Canal de Origem");
        jLabelNomeCanal.setName(""); // NOI18N

        jTextFieldNomeCanal.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jTextFieldNomeCanal.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jTextFieldNomeCanalActionPerformed(evt);
            }
        });

        jButtonInicializaCanal.setText("Inicializa Canal");
        jButtonInicializaCanal.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonInicializaCanalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelNomeCanal, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldNomeCanal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(jButtonInicializaCanal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabelNomeCanal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldNomeCanal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonInicializaCanal, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Destino"));
        jPanel2.setPreferredSize(new java.awt.Dimension(380, 210));
        jPanel2.setRequestFocusEnabled(false);
        jPanel2.setVerifyInputWhenFocusTarget(false);

        jLabelCanalDestino.setText("Nome do Canal de Destino");

        jTextFieldCanalDestino.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jTextFieldCanalDestino.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jTextFieldCanalDestinoActionPerformed(evt);
            }
        });

        jLabelIpVirtual.setText("IP Virtual");

        jTextFieldIPVirtual.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jTextFieldIPVirtual.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jTextFieldIPVirtualActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelCanalDestino, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(jTextFieldCanalDestino))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldIPVirtual, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelIpVirtual, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCanalDestino)
                    .addComponent(jLabelIpVirtual))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCanalDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldIPVirtual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados"));
        jPanel3.setPreferredSize(new java.awt.Dimension(380, 210));

        jLabelMsgEnviar.setText("Mensagem a Enviar");

        jTextAreaMsgEnviar.setColumns(20);
        jTextAreaMsgEnviar.setLineWrap(true);
        jTextAreaMsgEnviar.setRows(5);
        jScrollPane1.setViewportView(jTextAreaMsgEnviar);

        jButtonEnviarMensagem.setText("Enviar Mensagem");
        jButtonEnviarMensagem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonEnviarMensagemActionPerformed(evt);
            }
        });

        jLabelMsgReceber.setText("Mensagem a Receber");

        jTextAreaMsgReceber.setColumns(20);
        jTextAreaMsgReceber.setLineWrap(true);
        jTextAreaMsgReceber.setRows(5);
        jScrollPane2.setViewportView(jTextAreaMsgReceber);

        jButtonReceberMensagem.setText("Receber Mensagem");
        jButtonReceberMensagem.setToolTipText("");
        jButtonReceberMensagem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonReceberMensagemActionPerformed(evt);
            }
        });

        jButtonSair.setText("Sair");
        jButtonSair.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelMsgEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelMsgReceber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonEnviarMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButtonReceberMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(jButtonSair, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelMsgEnviar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jButtonEnviarMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabelMsgReceber)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSair, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonReceberMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonInicializaCanalActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonInicializaCanalActionPerformed
    {//GEN-HEADEREND:event_jButtonInicializaCanalActionPerformed
        try
        {
            this.getCamadaIPSimulada().inicializaCanal(1024);
            jTextFieldNomeCanal.setText(this.getCamadaIPSimulada().descobreCanalNomeSimulado());
        }
        catch (BufferOverflowException ex)
        {
            JOptionPane.showMessageDialog(null, "BufferOverFlow (IPSimuladaFrame-001).");
            ex.printStackTrace();
        }
        catch (CanalInexistenteException ex)
        {
            JOptionPane.showMessageDialog(null, "Canal Inexistente (IPSimuladaFrame-002).");
            ex.printStackTrace();
        }
        catch (ConnectionBindException ex)
        {
            JOptionPane.showMessageDialog(null, "Erro de Conexão (IPSimuladaFrame-003).");
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButtonInicializaCanalActionPerformed

    private void jButtonEnviarMensagemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonEnviarMensagemActionPerformed
    {//GEN-HEADEREND:event_jButtonEnviarMensagemActionPerformed
        try
        {
            this.getCamadaIPSimulada().transmite(jTextFieldCanalDestino.getText(), jTextAreaMsgEnviar.getText(), this.getCamadaIPSimulada().getTamanhoBufferTx());
            jTextFieldIPVirtual.setText(this.getCamadaIPSimulada().descobreIPSimulado(jTextFieldCanalDestino.getText()));
        }
        catch (CanalInexistenteException ex)
        {
            JOptionPane.showMessageDialog(null, "Exceção de Canal Inexistente (IPSimuladaFrame-004).");
            ex.printStackTrace();
        }
        catch (InvalidArgumentException ex)
        {
            JOptionPane.showMessageDialog(null, "Exceção de Argumento Inválido (IPSimuladaFrame-005).");
            ex.printStackTrace();
        }
        catch (Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Deu merda");
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButtonEnviarMensagemActionPerformed

    private void jButtonReceberMensagemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonReceberMensagemActionPerformed
    {//GEN-HEADEREND:event_jButtonReceberMensagemActionPerformed
        try
        {
            jTextAreaMsgReceber.setText(getCamadaIPSimulada().recebe(getCamadaIPSimulada().getTamanhoBufferRx()));
        }
        catch (CanalInexistenteException ex)
        {
            JOptionPane.showMessageDialog(null, "Exceção de Canal Inexistente (IPSimuladaFrame-006).");
            ex.printStackTrace();
        }
        catch (TimeOutException ex)
        {
            JOptionPane.showMessageDialog(null, "Exceção de Time-Out (IPSimuladaFrame-007).");
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButtonReceberMensagemActionPerformed

    private void jTextFieldNomeCanalActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextFieldNomeCanalActionPerformed
    {//GEN-HEADEREND:event_jTextFieldNomeCanalActionPerformed
        try
        {
            this.getCamadaIPSimulada().descobreIPSimulado(this.getCamadaIPSimulada().descobreCanalNomeSimulado());
        }
        catch (CanalInexistenteException ex)
        {
            JOptionPane.showMessageDialog(null, "Exceção de Canal Inexistente (IPSimuladaFrame-008).");
            ex.printStackTrace();
        }
        catch (InvalidArgumentException ex)
        {
            JOptionPane.showMessageDialog(null, "Exceção de Argumento Inválido (IPSimuladaFrame-009).");
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jTextFieldNomeCanalActionPerformed

    private void jTextFieldCanalDestinoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextFieldCanalDestinoActionPerformed
    {//GEN-HEADEREND:event_jTextFieldCanalDestinoActionPerformed
        // TODO add your handling code here:
        try
        {
            this.getCamadaIPSimulada().descobreIPSimulado(jTextFieldCanalDestino.getText());
        }
        catch (InvalidArgumentException ex)
        {
            JOptionPane.showMessageDialog(null, "Exceção de Argumento Inválido (IPSimuladaFrame-010).");
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jTextFieldCanalDestinoActionPerformed

    private void jTextFieldIPVirtualActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextFieldIPVirtualActionPerformed
    {//GEN-HEADEREND:event_jTextFieldIPVirtualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIPVirtualActionPerformed


    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSairActionPerformed
    {//GEN-HEADEREND:event_jButtonSairActionPerformed
        // TODO add your handling code here:
        try
        {
            System.out.println("Botão SAIR acionado...");
            this.getCamadaIPSimulada().finalizaCanal();
        }
        catch (CanalInexistenteException e)
        {
            // Se o canal não for finalizado é porque o usuário fechou o aplicativo antes de criar uma conexão.
            System.out.println(e.getMessage());
        }
        finally
        {
            System.out.println("Saindo normal1mente da aplicação.");
            System.exit(0);
        }
    }//GEN-LAST:event_jButtonSairActionPerformed

    /**
     * Termina a Aplicacao quando o usuário clica no botão sair (X) do Frame.
     */
    private void exitForm (java.awt.event.WindowEvent evt
    )
    {
        System
                .exit(0);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEnviarMensagem;
    private javax.swing.JButton jButtonInicializaCanal;
    private javax.swing.JButton jButtonReceberMensagem;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JLabel jLabelCanalDestino;
    private javax.swing.JLabel jLabelIpVirtual;
    private javax.swing.JLabel jLabelMsgEnviar;
    private javax.swing.JLabel jLabelMsgReceber;
    private javax.swing.JLabel jLabelNomeCanal;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaMsgEnviar;
    private javax.swing.JTextArea jTextAreaMsgReceber;
    private javax.swing.JTextField jTextFieldCanalDestino;
    private javax.swing.JTextField jTextFieldIPVirtual;
    private javax.swing.JTextField jTextFieldNomeCanal;
    // End of variables declaration//GEN-END:variables

    /**
     * * Método principal que torna executável a classe IpSimuladaFrame
     *
     * @param args the command line arguments
     */
    public static void main (String args[])
    {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Windows (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Windows".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(IpSimuladaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(IpSimuladaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(IpSimuladaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(IpSimuladaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run ()
            {
                new IpSimuladaFrame().setVisible(true);

            }
        });
    }
}
